@using Ktvg.Crm.ViewModels

@model IEnumerable<Ktvg.Crm.ViewModels.CustomerVM>
@{
    ViewData["Title"] = "Danh sách khách hàng";
    var message = TempData["CreateRegistrationSuccess"]?.ToString() ?? TempData["CreateRegistrationError"]?.ToString() ?? "";
}

@section Styles{
    <link rel="stylesheet" href="https://cdn.datatables.net/2.1.6/css/dataTables.bootstrap5.min.css">
}

<!-- Content wrapper -->
<div class="content-wrapper">
    <!-- Content -->

    <div class="container-xxl flex-grow-1 container-p-y">

        <!-- Basic Bootstrap Table -->
        <div class="card">
            <h5 class="card-header">
                <button class="btn btn-outline-primary waves-effect"
                        id="create-customer"
                        @* data-bs-toggle="modal" *@
                        @* data-bs-target="#installRegistrationModal" *@
                >
                    <i class="ri-add-circle-line"></i> &nbsp;Tạo mới
                </button>
                &nbsp;Khách hàng
            </h5>
            <div class="table-responsive text-nowrap">
                <table id="customerTable" class="table table-hover">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>
                                @Html.DisplayNameFor(model => model.CustomerSource)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CustomerCode)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CustomerName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.PhoneNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CreatedDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Remark)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody class="table-border-bottom-0">
                        @{
                            var index = 1;
                        }

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@(index++)</td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustomerSource)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustomerCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustomerName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                                    <a href="tel:@item.PhoneNumber" class="text-primary ms-2" title="Gọi điện">
                                        <i class="ri-phone-line"></i>
                                    </a>
                                    <a href="sms:@item.PhoneNumber" class="text-success ms-1" title="Gửi SMS">
                                        <i class="ri-message-2-line"></i>
                                    </a>
                                </td>
                                <td>
                                    @item.CreatedDate.ToString("dd/MM/yyyy")
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Remark)
                                </td>
                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                            <i class="ri-more-2-line"></i>
                                        </button>
                                        <div class="dropdown-menu">
                                            @foreach (var project in ViewBag.ProjectList)
                                            {
                                                <button class="dropdown-item project-button"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#contactHistoryModal"
                                                        data-project-id="@project.Id.ToString()"
                                                        data-project-name="@project.Name.ToString()"
                                                        data-customer-id="@item.Id.ToString()"
                                                        data-customer-name="@item.CustomerName.ToString()">
                                                    <i class="@project.Icon.ToString()"></i> @project.Name.ToString()
                                                </button>
                                            }
                                            <li><hr class="dropdown-divider"></li>
                                            <a asp-action="RecordContactHistory" asp-route-customerId="@item.Id" class="dropdown-item">
                                                <i class="ri-history-line"></i> Lịch sử tiếp xúc
                                            </a>
                                            <li><hr class="dropdown-divider"></li>
                                            <a class="dropdown-item edit-customer" data-customer-id="@item.Id"><i class="ri-edit-2-line text-warning"></i> Sửa </a>
                                            @* <a class="dropdown-item" href="javascript:void(0);"><i class="ri-delete-bin-6-line text-danger"></i> Xóa</a> *@
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
        <!--/ Basic Bootstrap Table -->

    </div>
</div>

<!-- Gọi partial view trong View chính -->
@await Html.PartialAsync("_CustomerRegistrationModal", new CustomerVM())
@await Html.PartialAsync("_ContactHistoryModal", new ContactHistoryVM())

@section Scripts
{
    <script src="https://cdn.datatables.net/2.1.6/js/dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/2.1.6/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#customerTable').DataTable({
                "language": {
                    "sProcessing": "Đang xử lý...",
                    "sLengthMenu": "Xem _MENU_ mục",
                    "sZeroRecords": "Không tìm thấy dòng nào phù hợp",
                    "sInfo": "Đang xem _START_ đến _END_ / _TOTAL_ mục",
                    "sInfoEmpty": "Đang xem 0 đến 0 / 0 mục",
                    "sInfoFiltered": "(được lọc từ _MAX_ mục)",
                    "sSearch": "Tìm:",
                    "oPaginate": {
                        "sFirst": "<<",
                        "sPrevious": "<",
                        "sNext": ">",
                        "sLast": ">>"
                    }
                },
                "scrollCollapse": true,
                "fixedColumns": {
                    right: 1
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#contactHistoryModal').on('show.bs.modal', function () {
                $('.project-button').click(function () {
                    var projectId = $(this).data('project-id');
                    var projectName = $(this).data('project-name');
                    var customerId = $(this).data('customer-id');
                    var customerName = $(this).data('customer-name');

                    console.log("projectId: ", projectId);
                    console.log("projectName: ", projectName);
                    console.log("customerId: ", customerId);

                    $('#contactHistoryModalLabel').text(projectName + ": " + customerName);
                    $('#ContactProjectId').val(projectId);
                    $('#CustomerId').val(customerId);

                    $('#StartDate').val(new Date().toISOString().split('T')[0]);
                });
            });

            $('select[name="InstallationType"]').change(function () {
                var paymentAmount = $(this).val() === 'GPS' ? 960000 : 1980000;
                $('#PaymentAmount').val(paymentAmount);
            });

            // Xử lý sự kiện khi nhấn nút "Tạo"
            $('#create-customer').click(function () {
                $('#installRegistrationModal').modal('show');
                fetchCreateCustomerDetails();
            });

            // Xử lý sự kiện khi nhấn nút "Sửa"
            $('.edit-customer').click(function () {
                var customerId = $(this).data('customer-id');
                fetchCustomerDetails(customerId);
            });

            $('select[name="ContactProjectId"]').change(function () {
                // Lấy văn bản của tùy chọn được chọn
                var selectedText = $(this).find("option:selected").text();

                // Lấy văn bản hiện tại của tiêu đề modal
                var currentText = $('#contactHistoryModalLabel').text().split(":")[1].trim();

                // Cập nhật văn bản tiêu đề modal
                $('#contactHistoryModalLabel').text(selectedText + ": " + currentText);
            });
        });

        function fetchCustomerDetails(customerId) {
            $.ajax({
                url: '/Customers/GetCustomerDetails',
                type: 'GET',
                data: { id: customerId },
                success: function (response) {
                    console.log("response: ", response);
                    fillCustomerEditForm(response);
                    $('#installRegistrationModal').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching customer details:', error);
                }
            });
        }

        function fetchCreateCustomerDetails() {
            // Get today's date in YYYY-MM-DD format
            var today = new Date().toISOString().slice(0, 10);

            // Clear all previous values
            $('#RegistrationDate').val('');
            $('#CustomerName').val('');
            $('#PhoneNumber').val('');
            $('#VehicleNumber').val('');
            $('#exampleFormControlTextarea1').val('');
            $('#CustomerSource').val('');
            $('#CustomerAddress').val('');
            $('#VehicleType').val('');
            $('#InstallationType').val('');
            $('#DeviceInstalled').val('');
            $('#LocateType').val('');
            $('#Remark').val('');

            // Set default values
            $('#Id').val(0);
            $('#RegistrationDate').val(today);
            $('#SendZaloConfirmation').prop('checked', true).val(true); // Check the checkbox
            $('#PaymentAmount').val(960000);

            // Gọi hàm getNextCustomerCode và xử lý kết quả
            getNextCustomerCode().then(function (response) {
                console.log("nextCode: ", response);

                if (response && response.nextCode) {
                    $('#CustomerCode').val(response.nextCode);
                } else {
                    console.error('Invalid response:', response);
                }
            }).catch(function (error) {
                console.error('Error in AJAX request:', error);
            });
        }

        function fillCustomerEditForm(data) {

            $('#installRegistrationModalLabel').text("SỬA: " + data.customerName);


            $('#Id').val(data.id);
            $('#CustomerCode').val(data.customerCode);
            $('#CustomerName').val(data.customerName);
            $('#PhoneNumber').val(data.phoneNumber);
            $('#RegistrationDate').val(new Date(data.registrationDate).toISOString().split('T')[0]);
            $('#ProductName').val(data.productName);
            $('#VehicleType').val(data.vehicleType);
            $('#VehicleNumber').val(data.vehicleNumber);
            $('#CustomerSource').val(data.customerSource);
            $('#CustomerAddress').val(data.customerAddress);
            $('#PaymentAmount').val(data.paymentAmount);
            $('#DeviceInstalled').val(data.deviceInstalled);
            $('#InstallationType').val(data.installationType);
            $(`input[name="LocateType"][value="${data.locateType}"]`).prop('checked', true);
            $('#Remark').val(data.remark);
            $('#SendZaloConfirmation').prop('checked', true);
        }

        // Function to get the next customer code
        function getNextCustomerCode() {
            return $.ajax({
                url: '/Customers/GetNextCustomerCode',  // Kiểm tra URL có đúng không
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    console.log("Success fetching customer code:", response);
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching next customer code:', error);
                }
            });
        }


        $('#installRegistrationModal').find('.btn-primary').click(function () {
            var isValid = true;
            var errorMessage = "";

            // Kiểm tra các trường bắt buộc
            $('#installRegistrationModal .modal-body :input[required]').each(function () {
                var label = $(this).closest('.form-floating').find('label');
                if ($(this).val() === '') {
                    isValid = false;
                    errorMessage += "Vui lòng nhập " + label.text().trim() + "\n";
                }
            });

            // Kiểm tra định dạng số điện thoại (ví dụ: +84xxxxxxxxx)
            var PhoneNumber = $('#PhoneNumber').val();
            if (!/^\+84\d{9}$/.test(PhoneNumber)) {
                isValid = false;
                errorMessage += "Số điện thoại không hợp lệ. Vui lòng nhập theo định dạng +84xxxxxxxxx.\n";
            }

            // Kiểm tra số tiền thanh toán (nếu có nhập) là số dương
            var PaymentAmount = $('#PaymentAmount').val();
            if (PaymentAmount !== '' && (!$.isNumeric(PaymentAmount) || parseFloat(PaymentAmount) < 0)) {
                isValid = false;
                errorMessage += "Số tiền thanh toán phải là số dương.\n";
            }

            if (isValid) {
                // Nếu tất cả các trường hợp lệ, bạn có thể gửi dữ liệu đi hoặc thực hiện các hành động khác ở đây
                // alert("Dữ liệu đã được xác thực và sẵn sàng để lưu!");
            } else {
                event.preventDefault(); // Chặn không cho thực hiện submit form
                alert(errorMessage);
            }
        });

        const $sendZaloCheckbox = $('#SendZaloConfirmation');

        $sendZaloCheckbox.change(function () {
            $(this).val(!$(this).is(':checked'));
        });

        $('input[name="LocateType"]').change(function () {
            var paymentAmount = $(this).val() === '1' ? 0 : 960000;
            $('#PaymentAmount').val(paymentAmount);
        });

        const selectAllCheckbox = document.getElementById('selectAllCheckbox');
        const customerCheckboxes = document.querySelectorAll('input[name="selectedCustomers"]');

        // Bắt sự kiện click cho checkbox có class 'selectedCustomers'
        $('.selectedCustomers').on('click', function () {
            var selectedCustomerIds = [];
            $("input[name='selectedCustomers']:checked").each(function () {
                selectedCustomerIds.push($(this).val());
            });

            $("#sendSmsButton").text(selectedCustomerIds.length === 0 ? "Nhắc nhở gia hạn" : "Nhắc nhở gia hạn (" + selectedCustomerIds.length + ")");
        });

    </script>
}
